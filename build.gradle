plugins {
    id "jaci.gradle.EmbeddedTools" version "2018.02.04" apply false
    id "com.dorongold.task-tree" version "1.3"
}

apply from: 'defaults.gradle'
apply from: 'libs.gradle'

apply plugin: 'jaci.gradle.EmbeddedTools'
apply plugin: 'cpp'
apply plugin: 'google-test-test-suite'
apply plugin: 'visual-studio'

model {
    components {
        kinematics(NativeLibrarySpec) {
            binaries.all {
                cppCompiler.args << '-std=c++14' << '-g'
            }
            sources.cpp {
                source {
                    srcDir 'src/cpp'
                    include '**/*.cpp'
                }
                exportedHeaders {
                    srcDir 'src/include'
                    include '**/*.h'
                }
                lib project: ':libs', library: "eigen", linkage: "api"
            }
        }
    }
    testSuites {
        kinematicsTest(GoogleTestTestSuiteSpec) {
            testing $.components.kinematics
            
            binaries.all {
                if (toolChain instanceof VisualCpp)
                    cppCompiler.args << '/DEBUG' << '/O2' << '/arch:SSE2'
                else {
                    cppCompiler.args << '-std=c++14' << '-O2'
                    linker.args << '-pthread'
                }
            }

            sources.cpp {
                source {
                    srcDir 'src/test'
                    include '**/*.cpp'
                }
                lib project: ':libs', library: "units", linkage: "api"
                lib project: ':libs', library: "eigen", linkage: "api"
            }
        }
    }
}

task plotTask() {
    doLast {
        def usePlot = true
        try {
            exec {
                commandLine 'gnuplot', '--version'
            }
        } catch (e) {
            println "GNUPlot not found."
            usePlot = false
        }
        if (usePlot) {
            def loadpath = file('src/testplot/')
            fileTree(dir: loadpath, include: '**/*.plt').files.each { file ->
                exec {
                    workingDir new File(project.buildDir, "test-results/kinematicsTest")
                    commandLine 'gnuplot', '-e', "set loadpath \"${loadpath.absolutePath}\";load \"settings.gp\"", file.absolutePath
                }
            }
        }
    }
}

task cleanTestTask() {
    doLast {
        delete {
            delete new File(project.buildDir, 'test-results')
        }
    }
}

check.finalizedBy plotTask
assemble.finalizedBy cleanTestTask

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}